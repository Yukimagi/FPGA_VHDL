module hw7(col_out, row_out, clk, rst, seg);
input [3:0]row_out;
input clk, rst;
output [3:0]col_out, seg;
reg [3:0]row_out, col_out, seg, mul_out;
reg clk;
reg S_row;
reg [1:0]row;


//scanner
always@(posedge clk or negedge rst)
begin

S_row=not(row_out[0]&&row_out[1]&&row_out[2]&&row_out[3])

if(S_row==1)begin
	//state S_1
	col_out=4'b1110;
	if(row_out==4'b1111)begin
		//state S_2
		col_out=4'b1101;
		if(row_out==4'b1111)begin
			//state S_3
			col_out=4'b1011;
			if(row_out==4'b1111)begin
				//state S_4
				col_out=4'b0111;
				if(row_out[0]==0)begin
					row=2'b00;
					mul_out=4'b0001;
					end
				else if(row_out[1]==0)begin
					row=2'b01;
					mul_out=4'b0100;
					end
				else if(row_out[2]==0)begin
					row=2'b10;
					mul_out=4'b0111;
					end
				else if(row_out[3]==0)begin
					row=2'b11;
					mul_out=4'b1110;
					end
			end
			else begin
				//state S_3 compare
				if(row_out[0]==0)begin
					row=2'b00;
					mul_out=4'b0010;
					end
				else if(row_out[1]==0)begin
					row=2'b01;
					mul_out=4'b0101;
					end
				else if(row_out[2]==0)begin
					row=2'b10;
					mul_out=4'b1000;
					end
				else if(row_out[3]==0)begin
					row=2'b11;
					mul_out=4'b0000;
					end		
			end
		end
		else begin
			//state S_2 compare
			if(row_out[0]==0)begin
					row=2'b00;
					mul_out=4'b0011;
					end
				else if(row_out[1]==0)begin
					row=2'b01;
					mul_out=4'b0110;
					end
				else if(row_out[2]==0)begin
					row=2'b10;
					mul_out=4'b1001;
					end
				else if(row_out[3]==0)begin
					row=2'b11;
					mul_out=4'b1111;
					end
		end
	end
	else begin
		//state S_1 compare
		if(row_out[0]==0)begin
					row=2'b00;
					mul_out=4'b1010;
					end
				else if(row_out[1]==0)begin
					row=2'b01;
					mul_out=4'b1011;
					end
				else if(row_out[2]==0)begin
					row=2'b10;
					mul_out=4'b1100;
					end
				else if(row_out[3]==0)begin
					row=2'b11;
					mul_out=4'b1101;
					end
		
	end
end	
else
	//state S_0
	col_out=4'b0000;
end

//7-seg
always @* begin 
case(mul_out)
4'b0000: seg = 8'b00111111;//0
4'b0001: seg = 8'b00000110;//1
4'b0010: seg = 8'b01011011;//2
4'b0011: seg = 8'b01001111;//3
4'b0100: seg = 8'b01100110;//4
4'b0101: seg = 8'b01101101;//5
4'b0110: seg = 8'b01111101;//6
4'b0111: seg = 8'b00000111;//7
4'b1000: seg = 8'b01111111;//8
4'b1001: seg = 8'b01101111;//9
4'b1010: seg = 8'b01110111;//a(A)
4'b1011: seg = 8'b01111100;//b
4'b1100: seg = 8'b00111001;//c
4'b1101: seg = 8'b01011110;//d
4'b1110: seg = 8'b01111001;//*(E)
4'b1111: seg = 8'b01110001;//#(F)
endcase
end

endmodule